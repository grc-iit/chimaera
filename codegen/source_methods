#!/usr/bin/env python3

"""
USAGE: ./referesh_methods [TASK_DIR]
"""

import yaml
import os
import sys

def refresh_source(TASK_ROOT):
    if not os.path.exists(f'{TASK_ROOT}/include'):
        return
    MOD_NAME = os.path.basename(TASK_ROOT)
    METHODS_YAML = f'{TASK_ROOT}/include/{MOD_NAME}/{MOD_NAME}_methods.yaml'

    with open(METHODS_YAML) as fp:
        methods = yaml.load(fp, Loader=yaml.FullLoader)
    if methods is None:
        methods = {}
    methods = sorted(methods.items(), key=lambda x: x[1])

    # Produce the MOD_NAME_methods.h file
    lines = []
    for method_enum_name, method_off in methods:
        if method_off < 10:
            continue
        method_name = method_enum_name.replace('k', '', 1)
        lines += [
            f'void {method_name}({method_name}Task *task, RunContext &rctx) {{',
            f'  task->SetModuleComplete();',
            f'}}',
            f'void Monitor{method_name}(MonitorModeId mode, {method_name}Task *task, RunContext &rctx) {{',
            f'}}'
            f'',
        ]
    print('\n'.join(lines))
TASK_DIR = sys.argv[1]
TASK_ROOTS = [os.path.join(TASK_DIR, item) for item in os.listdir(TASK_DIR)]
for TASK_ROOT in TASK_ROOTS:
    try:
        refresh_source(TASK_ROOT)
    except:
        pass
