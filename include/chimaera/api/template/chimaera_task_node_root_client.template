template<typename ...Args>
HSHM_CROSS_FUN
hipc::FullPtr<CUSTOM##Task> Async##CUSTOM##Alloc(const hipc::MemContext &mctx, 
                                                  const TaskNode &task_node,
                                                  const DomainQuery &dom_query,
                                                  Args&& ...args) {
  hipc::FullPtr<CUSTOM##Task> task =
  CHI_CLIENT->NewTask<CUSTOM##Task>(mctx, task_node, id_, dom_query, std::forward<Args>(args)...);
  return task;
}

template<typename ...Args>
HSHM_CROSS_FUN
hipc::FullPtr<CUSTOM##Task>
Async##CUSTOM(const hipc::MemContext &mctx, Args&& ...args) {
  TaskNode task_node = CHI_CLIENT->MakeTaskNodeId();
  hipc::FullPtr<CUSTOM##Task> task = Async##CUSTOM##Alloc(
      mctx, task_node, std::forward<Args>(args)...);
  CHI_CLIENT->ScheduleTask(nullptr, task);
  return task;
}